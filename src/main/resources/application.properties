#配置数据源
spring.datasource.url=jdbc:mysql://localhost:3306/seckill?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=W479127800@@@
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.initialization-mode=always
#指定连接池类型
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#连接池的配置信息
#初始化大小,最小,最大
spring.datasource.initalSize=100
spring.datasource.maxActive=1000
spring.datasource.minIdle=500
#配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20
#配置监控统计拦截的filters,去掉后监控界面sql将无法统计
spring.datasource.filters=stat


#redis配置
# Redis的主机地址
#spring.redis.host=127.0.0.1
#spring.redis.port=6349
#spring.redis.timeout=3
#spring.redis.lettuce.pool.max-idle=10
#spring.redis.lettuce.pool.max-wait=3\
redis.host=127.0.0.1
redis.port=6379
redis.timeout=100
#redis.password=null
redis.poolMaxTotal=1000
redis.poolMaxIdle=500
redis.poolMaxWait=500

#在业务场景中，一般会由Redis客户端(lettuc)进行连接资源管理，例如分配连接、监控连接状态、回收连接池资源等。
#默认设置下，Redis不会主动断开连接，即使这个客户端已经空闲了很长时间。但在业务核心应用中，
#建议配置timeout参数以使Redis具有主动回收资源的能力。否则，如果客户端出现异常，连接池资源得不到及时回收，
#可能因空闲连接占满连接池导致服务崩溃。

#thymeleaf配置
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false

#开启myBatis驼峰命名匹配规则
mybatis.configuration.map-underscore-to-camel-case=true
#要让MyBatis中知道有关mybatis的主配置文件和mapper文件的存在,必须进行配置(如果不采用注解的话)
#mybatis.config-location=
#mybatis.mapper-locations=
#mybatis.type-aliases-package=
logging.level.com.dapeng.seckill=debug

#启动时打开自动配置报告
debug=false

#页面静态化处理配置
spring.resources.add-mappings=true
spring.resources.cache.period=3600s
spring.resources.chain.cache=true
spring.resources.chain.enabled=true
spring.resources.chain.compressed=true
spring.resources.chain.html-application-cache=true
spring.resources.static-locations=classpath:/static/

#RabbitMQ配置
spring.rabbitmq.addresses=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
#消费者数量
spring.rabbitmq.listener.simple.concurrency=10
spring.rabbitmq.listener.simple.max-concurrency=10
#每次从队列中取的消息个数
spring.rabbitmq.listener.simple.prefetch=1
#消费者默认启动
spring.rabbitmq.listener.simple.auto-startup=true
#允许消费者消费失败后，将消息重新压入队列中
spring.rabbitmq.listener.simple.default-requeue-rejected=true
#失败重试
spring.rabbitmq.template.retry.enabled=true
spring.rabbitmq.template.retry.initial-interval=1s
spring.rabbitmq.template.retry.max-attempts=3
spring.rabbitmq.template.retry.max-interval=10s
spring.rabbitmq.template.retry.multiplier=1.0